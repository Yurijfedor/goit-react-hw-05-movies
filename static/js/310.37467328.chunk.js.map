{"version":3,"file":"static/js/310.37467328.chunk.js","mappings":"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","sources":["components/TrendingMovieItem.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/TmdbApiServices.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const TrendingMovieItem = ({ link: { title, name, id }, location }) => {\n  return title ? (\n    <li>\n      <Link to={{ pathname: `/movies/${id}` }} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ) : (\n    <li>\n      <Link to={{ pathname: `/movies/${id}` }} state={{ from: location }}>\n        {name}\n      </Link>\n    </li>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  width: 390px;\n`;\n","import { useSearchParams, useLocation, Outlet } from 'react-router-dom';\nimport { Pagination, Stack } from '@mui/material';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { StyledInput } from './Movies.styled';\nimport { FetchSearchMovies } from 'services/TmdbApiServices';\nimport { TrendingMovieItem } from 'components/TrendingMovieItem';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    FetchSearchMovies(movieName, page).then(response => {\n      setMovieList([...response.data.results]);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [movieName, page]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: query });\n    setPage(1);\n    formReset();\n  };\n\n  const formReset = () => setQuery('');\n\n  const updateQuery = evt => {\n    setQuery(evt.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <StyledInput\n          type=\"search\"\n          name=\"searshQuery\"\n          placeholder=\"Movie search\"\n          value={query}\n          onChange={updateQuery}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movieName ? (\n        <ul>\n          {movieList.map((movie, i) => {\n            return (\n              <TrendingMovieItem key={i} link={movie} location={location} />\n            );\n          })}\n        </ul>\n      ) : (\n        ''\n      )}\n      <Stack spacing={2}>\n        {!!totalPages && (\n          <Pagination\n            count={totalPages}\n            page={page}\n            onChange={(_, num) => setPage(num)}\n            showFirstButton\n            showLastButton\n          />\n        )}\n      </Stack>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '262a417f78469232900b1579d8d8e776';\nconst options = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrendingMovies = async page => {\n  try {\n    const trendingMovies = await axios.get(\n      `${BASE_URL}trending/all/week?${options}&page=${page}`\n    );\n    return trendingMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieById = async id => {\n  try {\n    const moviesById = await axios.get(`${BASE_URL}movie/${id}?${options}`);\n    return moviesById;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieCast = async id => {\n  try {\n    const movieCast = await axios.get(\n      `${BASE_URL}movie/${id}/credits?${options}`\n    );\n    return movieCast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieReview = async id => {\n  try {\n    const movieReview = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?${options}`\n    );\n    return movieReview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchSearchMovies = async (query, page) => {\n  try {\n    const searchMovies = await axios.get(\n      `${BASE_URL}search/movie?${options}&query=${query}&page=${page}`\n    );\n    return searchMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["TrendingMovieItem","link","title","name","id","location","to","pathname","state","from","StyledInput","styled","useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","query","setQuery","page","setPage","totalPages","setTotalPages","movieName","get","useLocation","useEffect","FetchSearchMovies","then","response","data","results","total_pages","formReset","onSubmit","evt","preventDefault","type","placeholder","value","onChange","target","map","movie","i","Stack","spacing","Pagination","count","_","num","showFirstButton","showLastButton","Suspense","fallback","BASE_URL","options","URLSearchParams","api_key","IMAGE_URL","FetchTrendingMovies","axios","trendingMovies","console","log","FetchMovieById","moviesById","FetchMovieCast","movieCast","FetchMovieReview","movieReview","searchMovies"],"sourceRoot":""}