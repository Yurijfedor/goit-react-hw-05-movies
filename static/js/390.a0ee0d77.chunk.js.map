{"version":3,"file":"static/js/390.a0ee0d77.chunk.js","mappings":"qNAoCA,UAhCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAC3BJ,GAAY,OAAII,EAASC,KAAKC,MAC/B,GACF,GAAE,CAACV,KAGF,+BACE,wBACGG,EAASQ,KAAI,SAAAD,GACZ,OACE,UAAC,IAAD,CAAmBE,GAAI,KAAMC,QAAS,OAAQC,QAAS,EAAGC,GAAI,EAA9D,UACGL,EAAKM,eACJ,gBACEC,IAAKC,EAAAA,GAAYR,EAAKM,aACtBG,MAAO,QACPC,IAAKV,EAAKW,OAGbX,EAAKW,MACN,uCAAeX,EAAKY,eATZZ,EAAKa,GAYlB,OAIR,C,0NClCKC,EAAW,gCAEXC,EAAU,IAAIC,gBAAgB,CAClCC,QAFc,qCAKHT,EAAY,kCAEZU,EAAmB,mCAAG,WAAMC,GAAN,gGAEFC,EAAAA,GAAAA,IAAA,UACxBN,EADwB,6BACKC,EADL,iBACqBI,IAHnB,cAEzBE,EAFyB,yBAKxBA,GALwB,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,sDAWnBC,EAAc,mCAAG,WAAMX,GAAN,gGAEDO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BD,EAA9B,YAAoCE,IAFnC,cAEpBU,EAFoB,yBAGnBA,GAHmB,gCAK1BH,QAAQC,IAAR,MAL0B,yDAAH,sDASd3B,EAAc,mCAAG,WAAMiB,GAAN,gGAEFO,EAAAA,GAAAA,IAAA,UACnBN,EADmB,iBACFD,EADE,oBACYE,IAHV,cAEpBW,EAFoB,yBAKnBA,GALmB,gCAO1BJ,QAAQC,IAAR,MAP0B,yDAAH,sDAWdI,EAAgB,mCAAG,WAAMd,GAAN,gGAEFO,EAAAA,GAAAA,IAAA,UACrBN,EADqB,iBACJD,EADI,oBACUE,IAHR,cAEtBa,EAFsB,yBAKrBA,GALqB,gCAO5BN,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBM,EAAiB,mCAAG,WAAOC,EAAOX,GAAd,gGAEFC,EAAAA,GAAAA,IAAA,UACtBN,EADsB,wBACEC,EADF,kBACmBe,EADnB,iBACiCX,IAH/B,cAEvBY,EAFuB,yBAKtBA,GALsB,gCAO7BT,QAAQC,IAAR,MAP6B,yDAAH,uD","sources":["components/cast/Cast.jsx","services/TmdbApiServices.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FetchMovieCast, IMAGE_URL } from 'services/TmdbApiServices';\nimport { Box } from 'constans';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n\n  useEffect(() => {\n    FetchMovieCast(movieId).then(response => {\n      setCastList([...response.data.cast]);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {castList.map(cast => {\n          return (\n            <Box key={cast.id} as={'li'} display={'grid'} gridGap={3} mb={5}>\n              {cast.profile_path && (\n                <img\n                  src={IMAGE_URL + cast.profile_path}\n                  width={'100px'}\n                  alt={cast.name}\n                />\n              )}\n              {cast.name}\n              <p>character: {cast.character}</p>\n            </Box>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '262a417f78469232900b1579d8d8e776';\nconst options = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrendingMovies = async page => {\n  try {\n    const trendingMovies = await axios.get(\n      `${BASE_URL}trending/all/week?${options}&page=${page}`\n    );\n    return trendingMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieById = async id => {\n  try {\n    const moviesById = await axios.get(`${BASE_URL}movie/${id}?${options}`);\n    return moviesById;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieCast = async id => {\n  try {\n    const movieCast = await axios.get(\n      `${BASE_URL}movie/${id}/credits?${options}`\n    );\n    return movieCast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieReview = async id => {\n  try {\n    const movieReview = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?${options}`\n    );\n    return movieReview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchSearchMovies = async (query, page) => {\n  try {\n    const searchMovies = await axios.get(\n      `${BASE_URL}search/movie?${options}&query=${query}&page=${page}`\n    );\n    return searchMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","castList","setCastList","useEffect","FetchMovieCast","then","response","data","cast","map","as","display","gridGap","mb","profile_path","src","IMAGE_URL","width","alt","name","character","id","BASE_URL","options","URLSearchParams","api_key","FetchTrendingMovies","page","axios","trendingMovies","console","log","FetchMovieById","moviesById","movieCast","FetchMovieReview","movieReview","FetchSearchMovies","query","searchMovies"],"sourceRoot":""}