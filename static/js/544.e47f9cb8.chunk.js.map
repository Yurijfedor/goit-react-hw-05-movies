{"version":3,"file":"static/js/544.e47f9cb8.chunk.js","mappings":"8LAEaA,EAAoB,SAAC,GAA6C,IAAD,IAA1CC,KAAQC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,GAAMC,EAAe,EAAfA,SAC7D,OAAOH,GACL,yBACE,SAAC,KAAD,CAAMI,GAAI,CAAEC,SAAS,WAAD,OAAaH,IAAQI,MAAO,CAAEC,KAAMJ,GAAxD,SACGH,OAIL,yBACE,SAAC,KAAD,CAAMI,GAAI,CAAEC,SAAS,WAAD,OAAaH,IAAQI,MAAO,CAAEC,KAAMJ,GAAxD,SACGF,KAIR,C,yHC6BD,UAxCa,WACX,OAAkCO,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBL,GAAMM,MAAK,SAAAC,GAC7BR,GAAa,OAAIQ,EAASC,KAAKC,UAC/BN,EAAcI,EAASC,KAAKE,YAC7B,GACF,GAAE,CAACV,KAGF,6BACE,2CACsB,IAArBF,EAAUa,SACT,wBACGb,EAAUc,KAAI,SAACC,EAAOC,GACrB,OAAO,SAAC,IAAD,CAA2B1B,KAAMyB,GAATC,EAChC,OAGL,SAAC,IAAD,CAAOC,QAAS,EAAhB,WACKb,IACD,SAAC,IAAD,CACEc,MAAOd,EACPF,KAAMA,EACNiB,SAAU,SAACC,EAAGC,GAAJ,OAAYlB,EAAQkB,EAApB,EACVC,iBAAe,EACfC,gBAAc,OAKpB,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,0NC3CKC,EAAW,gCAEXC,EAAU,IAAIC,gBAAgB,CAClCC,QAFc,qCAKHC,EAAY,kCAEZvB,EAAmB,mCAAG,WAAML,GAAN,gGAEF6B,EAAAA,GAAAA,IAAA,UACxBL,EADwB,6BACKC,EADL,iBACqBzB,IAHnB,cAEzB8B,EAFyB,yBAKxBA,GALwB,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,sDAWnBC,EAAc,mCAAG,WAAM1C,GAAN,gGAEDsC,EAAAA,GAAAA,IAAA,UAAaL,EAAb,iBAA8BjC,EAA9B,YAAoCkC,IAFnC,cAEpBS,EAFoB,yBAGnBA,GAHmB,gCAK1BH,QAAQC,IAAR,MAL0B,yDAAH,sDASdG,EAAc,mCAAG,WAAM5C,GAAN,gGAEFsC,EAAAA,GAAAA,IAAA,UACnBL,EADmB,iBACFjC,EADE,oBACYkC,IAHV,cAEpBW,EAFoB,yBAKnBA,GALmB,gCAO1BL,QAAQC,IAAR,MAP0B,yDAAH,sDAWdK,EAAgB,mCAAG,WAAM9C,GAAN,gGAEFsC,EAAAA,GAAAA,IAAA,UACrBL,EADqB,iBACJjC,EADI,oBACUkC,IAHR,cAEtBa,EAFsB,yBAKrBA,GALqB,gCAO5BP,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBO,EAAiB,mCAAG,WAAOC,EAAOxC,GAAd,gGAEF6B,EAAAA,GAAAA,IAAA,UACtBL,EADsB,wBACEC,EADF,kBACmBe,EADnB,iBACiCxC,IAH/B,cAEvByC,EAFuB,yBAKtBA,GALsB,gCAO7BV,QAAQC,IAAR,MAP6B,yDAAH,uD","sources":["components/TrendingMovieItem.jsx","pages/Home/Home.jsx","services/TmdbApiServices.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const TrendingMovieItem = ({ link: { title, name, id }, location }) => {\n  return title ? (\n    <li>\n      <Link to={{ pathname: `/movies/${id}` }} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ) : (\n    <li>\n      <Link to={{ pathname: `/movies/${id}` }} state={{ from: location }}>\n        {name}\n      </Link>\n    </li>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { Pagination, Stack } from '@mui/material';\nimport { FetchTrendingMovies } from 'services/TmdbApiServices';\nimport { TrendingMovieItem } from 'components/TrendingMovieItem';\nimport { Outlet } from 'react-router-dom';\nconst Home = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    FetchTrendingMovies(page).then(response => {\n      setMovieList([...response.data.results]);\n      setTotalPages(response.data.total_pages);\n    });\n  }, [page]);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {movieList.length !== 0 && (\n        <ul>\n          {movieList.map((movie, i) => {\n            return <TrendingMovieItem key={i} link={movie} />;\n          })}\n        </ul>\n      )}\n      <Stack spacing={2}>\n        {!!totalPages && (\n          <Pagination\n            count={totalPages}\n            page={page}\n            onChange={(_, num) => setPage(num)}\n            showFirstButton\n            showLastButton\n          />\n        )}\n      </Stack>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '262a417f78469232900b1579d8d8e776';\nconst options = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrendingMovies = async page => {\n  try {\n    const trendingMovies = await axios.get(\n      `${BASE_URL}trending/all/week?${options}&page=${page}`\n    );\n    return trendingMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieById = async id => {\n  try {\n    const moviesById = await axios.get(`${BASE_URL}movie/${id}?${options}`);\n    return moviesById;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieCast = async id => {\n  try {\n    const movieCast = await axios.get(\n      `${BASE_URL}movie/${id}/credits?${options}`\n    );\n    return movieCast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieReview = async id => {\n  try {\n    const movieReview = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?${options}`\n    );\n    return movieReview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchSearchMovies = async (query, page) => {\n  try {\n    const searchMovies = await axios.get(\n      `${BASE_URL}search/movie?${options}&query=${query}&page=${page}`\n    );\n    return searchMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["TrendingMovieItem","link","title","name","id","location","to","pathname","state","from","useState","movieList","setMovieList","page","setPage","totalPages","setTotalPages","useEffect","FetchTrendingMovies","then","response","data","results","total_pages","length","map","movie","i","spacing","count","onChange","_","num","showFirstButton","showLastButton","Suspense","fallback","BASE_URL","options","URLSearchParams","api_key","IMAGE_URL","axios","trendingMovies","console","log","FetchMovieById","moviesById","FetchMovieCast","movieCast","FetchMovieReview","movieReview","FetchSearchMovies","query","searchMovies"],"sourceRoot":""}