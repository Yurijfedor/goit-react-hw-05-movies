{"version":3,"file":"static/js/33.a48989aa.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/TmdbApiServices.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.text};\n  text-decoration: none;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  text-align: center;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const StyledNav = styled.ul`\n  display: grid;\n  gap: ${p => p.theme.space[3]}px;\n`;\n","import {\n  NavLink,\n  Outlet,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { StyledButton, StyledNav } from './MovieDetails.styled';\nimport { ImArrowLeft2 } from 'react-icons/im';\nimport { FetchMovieById, IMAGE_URL } from 'services/TmdbApiServices';\nimport { Box } from 'constans';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    FetchMovieById(movieId).then(response => {\n      response.data\n        ? setMovie(response.data)\n        : alert('The resource you requested could not be found.');\n    });\n  }, [movieId]);\n\n  const handleClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <main>\n      <StyledButton onClick={handleClick}>\n        <ImArrowLeft2 />\n        Go back\n      </StyledButton>\n      {movie && (\n        <>\n          <Box\n            display={'flex'}\n            gridGap={5}\n            pb={4}\n            borderBottom={'normal'}\n            mb={4}\n          >\n            <div>\n              <img\n                src={IMAGE_URL + movie.poster_path}\n                alt={movie.title || movie.name}\n                widht=\"300\"\n                height=\"450\"\n              />\n            </div>\n\n            <div>\n              <h2>\n                {movie.title || movie.name} (\n                {new Date(movie.release_date).getFullYear()})\n              </h2>\n              <p>User score: {Math.round(movie.vote_average * 10)} %</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </Box>\n          <h5>Additional information</h5>\n          <StyledNav>\n            <li>\n              <NavLink to={`cast`}>Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to={`reviews`}>Reviews</NavLink>\n            </li>\n          </StyledNav>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '262a417f78469232900b1579d8d8e776';\nconst options = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrendingMovies = async page => {\n  try {\n    const trendingMovies = await axios.get(\n      `${BASE_URL}trending/all/week?${options}&page=${page}`\n    );\n    return trendingMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieById = async id => {\n  try {\n    const moviesById = await axios.get(`${BASE_URL}movie/${id}?${options}`);\n    return moviesById;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieCast = async id => {\n  try {\n    const movieCast = await axios.get(\n      `${BASE_URL}movie/${id}/credits?${options}`\n    );\n    return movieCast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieReview = async id => {\n  try {\n    const movieReview = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?${options}`\n    );\n    return movieReview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchSearchMovies = async (query, page) => {\n  try {\n    const searchMovies = await axios.get(\n      `${BASE_URL}search/movie?${options}&query=${query}&page=${page}`\n    );\n    return searchMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["StyledButton","styled","Link","p","theme","colors","text","space","StyledNav","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","useEffect","FetchMovieById","then","response","data","alert","onClick","state","from","display","gridGap","pb","borderBottom","mb","src","IMAGE_URL","poster_path","alt","title","name","widht","height","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","join","to","Suspense","fallback","BASE_URL","options","URLSearchParams","api_key","FetchTrendingMovies","page","axios","trendingMovies","console","log","id","moviesById","FetchMovieCast","movieCast","FetchMovieReview","movieReview","FetchSearchMovies","query","searchMovies"],"sourceRoot":""}