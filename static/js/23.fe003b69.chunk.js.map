{"version":3,"file":"static/js/23.fe003b69.chunk.js","mappings":"0MAiCA,UA7BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAC,GAC7BJ,GAAc,OAAII,EAASC,KAAKC,SACjC,GACF,GAAE,CAACV,KAGF,8BACyB,IAAtBG,EAAWQ,QACV,wBACGR,EAAWS,KAAI,SAACC,EAAQC,GACvB,OACE,2BACE,oCAAYD,EAAOE,WACnB,uBAAIF,EAAOG,YAFJF,EAKZ,MATJ,2CAgBN,C,0NC/BKG,EAAW,gCAEXC,EAAU,IAAIC,gBAAgB,CAClCC,QAFc,qCAKHC,EAAY,kCAEZC,EAAmB,mCAAG,WAAMC,GAAN,gGAEFC,EAAAA,GAAAA,IAAA,UACxBP,EADwB,6BACKC,EADL,iBACqBK,IAHnB,cAEzBE,EAFyB,yBAKxBA,GALwB,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,sDAWnBC,EAAc,mCAAG,WAAMC,GAAN,gGAEDL,EAAAA,GAAAA,IAAA,UAAaP,EAAb,iBAA8BY,EAA9B,YAAoCX,IAFnC,cAEpBY,EAFoB,yBAGnBA,GAHmB,gCAK1BJ,QAAQC,IAAR,MAL0B,yDAAH,sDASdI,EAAc,mCAAG,WAAMF,GAAN,gGAEFL,EAAAA,GAAAA,IAAA,UACnBP,EADmB,iBACFY,EADE,oBACYX,IAHV,cAEpBc,EAFoB,yBAKnBA,GALmB,gCAO1BN,QAAQC,IAAR,MAP0B,yDAAH,sDAWdrB,EAAgB,mCAAG,WAAMuB,GAAN,gGAEFL,EAAAA,GAAAA,IAAA,UACrBP,EADqB,iBACJY,EADI,oBACUX,IAHR,cAEtBe,EAFsB,yBAKrBA,GALqB,gCAO5BP,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBO,EAAiB,mCAAG,WAAOC,EAAOZ,GAAd,gGAEFC,EAAAA,GAAAA,IAAA,UACtBP,EADsB,wBACEC,EADF,kBACmBiB,EADnB,iBACiCZ,IAH/B,cAEvBa,EAFuB,yBAKtBA,GALsB,gCAO7BV,QAAQC,IAAR,MAP6B,yDAAH,uD","sources":["components/reviews/Reviews.jsx","services/TmdbApiServices.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FetchMovieReview } from 'services/TmdbApiServices';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewList, setReviewList] = useState([]);\n\n  useEffect(() => {\n    FetchMovieReview(movieId).then(response => {\n      setReviewList([...response.data.results]);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviewList.length !== 0 ? (\n        <ul>\n          {reviewList.map((review, i) => {\n            return (\n              <li key={i}>\n                <h4>Author:{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        `We don't have any review for this video`\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '262a417f78469232900b1579d8d8e776';\nconst options = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrendingMovies = async page => {\n  try {\n    const trendingMovies = await axios.get(\n      `${BASE_URL}trending/all/week?${options}&page=${page}`\n    );\n    return trendingMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieById = async id => {\n  try {\n    const moviesById = await axios.get(`${BASE_URL}movie/${id}?${options}`);\n    return moviesById;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieCast = async id => {\n  try {\n    const movieCast = await axios.get(\n      `${BASE_URL}movie/${id}/credits?${options}`\n    );\n    return movieCast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchMovieReview = async id => {\n  try {\n    const movieReview = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?${options}`\n    );\n    return movieReview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const FetchSearchMovies = async (query, page) => {\n  try {\n    const searchMovies = await axios.get(\n      `${BASE_URL}search/movie?${options}&query=${query}&page=${page}`\n    );\n    return searchMovies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviewList","setReviewList","useEffect","FetchMovieReview","then","response","data","results","length","map","review","i","author","content","BASE_URL","options","URLSearchParams","api_key","IMAGE_URL","FetchTrendingMovies","page","axios","trendingMovies","console","log","FetchMovieById","id","moviesById","FetchMovieCast","movieCast","movieReview","FetchSearchMovies","query","searchMovies"],"sourceRoot":""}